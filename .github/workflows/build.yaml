on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, dev, gh-actions ]

  release:
    types:
      - "created"
      - "edited"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/backblaze-operator
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build image
        run: |
          make docker-buildx IMG=ghcr.io/mgruszkiewicz/backblaze-operator:${{github.ref_name}}
      
      - name: Build image with tag 'latest'
        run: |
          docker pull ghcr.io/mgruszkiewicz/backblaze-operator:${{github.ref_name}}
          docker tag ghcr.io/mgruszkiewicz/backblaze-operator:${{github.ref_name}} ghcr.io/mgruszkiewicz/backblaze-operator:latest
          docker push ghcr.io/mgruszkiewicz/backblaze-operator:latest

      - name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v3
        with:
          image: ghcr.io/mgruszkiewicz/backblaze-operator:${{github.ref_name}}
          dockerfile: ./Dockerfile
          annotations: true

      - name: Upload SARIF file
        if: ${{ steps.scan.outputs.sarif != '' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}